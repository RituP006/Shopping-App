************************************ Problem in passing data ******************************

Problem with passing data on fly (Navigator.push()) : 
> In large apps it's hard to find the navigating point.

Problem with passing data from constructor : 
> Sometimes we pass data to a widget where we don't use it, but need it to forward it further. 
> can be cumbersome & difficult.
> Unnecessary rebuilds of the entire app or major parts of the app.

********************************** What is state? ******************************************

> Data are reflected in User interface > change in data leads to change in UI > Data that affects the UI is called state

> App-wide state : Affects entire app or significant parts of the app. 
eg. Authentication(Is the user authenticated?) affects rendering of other screens of app

>Widget(Local) state : affects only widget of its own does not affect other widgets. 
eg. Should a loading spinner be displayed? it depends only on form input 

********************************* State Management solution *****************************

> The Provider Package & Pattern - A central data provider which can be attached to any widget, and then all the child widget can  
listen to that provider by of(context).

> the build() of any child widget thats listening from provider runs when data in provider changes.

******************************** difference between with and extend in dart ********************

> when we extend a class we logically make a strong connection between them(i.e it's treated as the same type), 
and technically all the properties and method are accessible to child class. Multiple class cannot be extended in dart.

> when we extend a mixin with 'with' keyword the connection between class are not strong, but we use it as a utility class,
we can access all its properties and method. more than one mixin can be added to the class.


************************************ Storing data in Flutter apps ********************************

-> On Device Storage 
- Only available for your app/ for your user
- If SqlLite is used, data can persist across app restarts 
- Workd offline

-> On Web Server
- Available for all users across different devices
- Data persist on app restarts
- Internet connection required

*********************************** Connecting Flutter to a Database (database on web server) ***********************

- It's not connected directly to database(MySQL,NoSQL) cause it's technically complex and Insecure.
- if you connect it directly, all the user credentials will have to be stored in your app code, and could be accessible to users who
install it.
- therefore web server is used as a bridge between flutter and database.

follow this to know about RestAPI - https://www.smashingmagazine.com/2018/01/understanding-using-rest-api/

*********************************** Future in dart *********************************
- Future in dart are used for asynchronous execution of code. 
- .then() is used to execute a function that's supposed to be executed after the future code, however dart doesn't wait for future code 
to be done, it continue with rest of the code synchronously.
- .then(_) expects a response, even if future doesn't return any, also it itself return a future i.e .then(_).then(_) can be 
used(it's called chaining ).

http requests methods return Future in dart.


***************************************** Authenticatiom in flutter ******************************

> Here we work with Stateless RESTful APIs i.e the server does not care about the individual client that's connected instead 
it gives a certain end point to which we can send request to which we can return answers.

> here there's no session management, but instead we have tokens.

> when the user logs in, a token is generated at server using certain algorithm and private keys, thats only known to 
server, so that a token can't be faked. 
> That token is a very long string  which is sent back to flutter app which you then store in your device (this allows
us to read it from there when app restarts).
> Now when we send request to server it requires us to add such a token to the end-point of the request through which now server identifies individual.


**************************************** Animations in Flutter ****************************************

> Flutter updates the screen 60 times per second, so every 60 miliseconds. 
> So for Animation we try to change how things look in every 60 milliseconds.